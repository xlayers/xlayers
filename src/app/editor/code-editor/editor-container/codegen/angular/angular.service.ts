import { Injectable } from '@angular/core';
import { CodeGenFacade, XlayersNgxEditorModel } from '../codegen.service';

@Injectable({
  providedIn: 'root'
})
export class AngularCodeGenService implements CodeGenFacade {

  constructor() {}

  private info() {
    return `File auto-generated by xlayers.app on ${new Date()}`;
  }

  generate(): Array<XlayersNgxEditorModel> {
    return [{
      uri: 'README.md',
      value: this.generateReadme(),
      language: 'text/plain',
      kind: 'text'
    }, {
      uri: 'xlayers.component.ts',
      value: this.generateComponent(),
      language: 'typescript',
      kind: 'angular'
    }, {
      uri: 'xlayers.component.spec.ts',
      value: this.generateComponentSpec(),
      language: 'typescript',
      kind: 'angular'
    }, {
      uri: 'xlayers.module.ts',
      value: this.generateModule(),
      language: 'typescript',
      kind: 'angular'
    }];
  }

  private generateReadme() {
    return `${ this.info() }`;
  }

  /**
   * @todo make this dynamic
   */
  private generateModule() {
    return `// ${ this.info() }
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { XLayersComponent } from './xlayers.component';

@NgModule({
  imports: [
    CommonModule,
  ],
  declarations: [XLayersComponent]
})
export class XLayersModule { }
    `;
  }

  /**
   * @todo make this dynamic
   */
  private generateComponent() {
    return `// ${ this.info() }
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'xly-component',
  template: \`
    <span *ngIf="textContent">{{textContent}}</span>
    <sketch-layer
      (selectedLayer)="selectLayer($event)"
      *ngFor="let layer of layer?.layers"
      class="layer"
      [layer]="layer"
      [level]="level + 1"
      [wireframe]="wireframe"
      [ngClass]="{ 'wireframe': wireframe }"
      [attr.data-id]="layer?.do_objectID"
      [attr.data-name]="layer?.name"
      [attr.data-class]="layer?._class"></sketch-layer>
  \`,
  styles: []
})
export class XLayersComponent implements OnInit {

  constructor() {}

  ngOnInit() {}
}
`;
  }

  /**
   * @todo make this dynamic
   */
  private generateComponentSpec() {
    return `// ${ this.info() }
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { XLayersComponent } from './xlayers.component';

describe('XLayersComponent', () => {
  let component: XLayersComponent;
  let fixture: ComponentFixture<XLayersComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ XLayersComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(XLayersComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
    `;
  }
}
